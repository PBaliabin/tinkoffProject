/*
 * This file is generated by jOOQ.
 */
package domain.tables.records;


import domain.tables.ChatToLink;

import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatToLinkRecord extends UpdatableRecordImpl<ChatToLinkRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.chat_to_link.link</code>.
     */
    public void setLink(@NotNull String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.chat_to_link.link</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 200)
    @NotNull
    public String getLink() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.chat_to_link.chat_id</code>.
     */
    public void setChatId(@NotNull String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.chat_to_link.chat_id</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 50)
    @NotNull
    public String getChatId() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return ChatToLink.CHAT_TO_LINK.LINK;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return ChatToLink.CHAT_TO_LINK.CHAT_ID;
    }

    @Override
    @NotNull
    public String component1() {
        return getLink();
    }

    @Override
    @NotNull
    public String component2() {
        return getChatId();
    }

    @Override
    @NotNull
    public String value1() {
        return getLink();
    }

    @Override
    @NotNull
    public String value2() {
        return getChatId();
    }

    @Override
    @NotNull
    public ChatToLinkRecord value1(@NotNull String value) {
        setLink(value);
        return this;
    }

    @Override
    @NotNull
    public ChatToLinkRecord value2(@NotNull String value) {
        setChatId(value);
        return this;
    }

    @Override
    @NotNull
    public ChatToLinkRecord values(@NotNull String value1, @NotNull String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatToLinkRecord
     */
    public ChatToLinkRecord() {
        super(ChatToLink.CHAT_TO_LINK);
    }

    /**
     * Create a detached, initialised ChatToLinkRecord
     */
    @ConstructorProperties({ "link", "chatId" })
    public ChatToLinkRecord(@NotNull String link, @NotNull String chatId) {
        super(ChatToLink.CHAT_TO_LINK);

        setLink(link);
        setChatId(chatId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ChatToLinkRecord
     */
    public ChatToLinkRecord(domain.tables.pojos.ChatToLink value) {
        super(ChatToLink.CHAT_TO_LINK);

        if (value != null) {
            setLink(value.getLink());
            setChatId(value.getChatId());
            resetChangedOnNotNull();
        }
    }
}
