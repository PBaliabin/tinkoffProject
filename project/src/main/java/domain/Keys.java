/*
 * This file is generated by jOOQ.
 */
package domain;


import domain.tables.Chat;
import domain.tables.ChatToLink;
import domain.tables.Link;
import domain.tables.records.ChatRecord;
import domain.tables.records.ChatToLinkRecord;
import domain.tables.records.LinkRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChatRecord> CHAT_PKEY = Internal.createUniqueKey(Chat.CHAT, DSL.name("chat_pkey"), new TableField[] { Chat.CHAT.CHAT_ID }, true);
    public static final UniqueKey<ChatToLinkRecord> CHAT_TO_LINK_PKEY = Internal.createUniqueKey(ChatToLink.CHAT_TO_LINK, DSL.name("chat_to_link_pkey"), new TableField[] { ChatToLink.CHAT_TO_LINK.LINK, ChatToLink.CHAT_TO_LINK.CHAT_ID }, true);
    public static final UniqueKey<LinkRecord> LINK_PKEY = Internal.createUniqueKey(Link.LINK, DSL.name("link_pkey"), new TableField[] { Link.LINK.LINK_ }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ChatToLinkRecord, ChatRecord> CHAT_TO_LINK__CHAT_TO_LINK_CHAT_ID_FKEY = Internal.createForeignKey(ChatToLink.CHAT_TO_LINK, DSL.name("chat_to_link_chat_id_fkey"), new TableField[] { ChatToLink.CHAT_TO_LINK.CHAT_ID }, Keys.CHAT_PKEY, new TableField[] { Chat.CHAT.CHAT_ID }, true);
    public static final ForeignKey<ChatToLinkRecord, LinkRecord> CHAT_TO_LINK__CHAT_TO_LINK_LINK_FKEY = Internal.createForeignKey(ChatToLink.CHAT_TO_LINK, DSL.name("chat_to_link_link_fkey"), new TableField[] { ChatToLink.CHAT_TO_LINK.LINK }, Keys.LINK_PKEY, new TableField[] { Link.LINK.LINK_ }, true);
}
